# -*- coding: mbcs -*-
# Created by makepy.py version 0.5.00
# By python version 2.6.2 (r262:71605, Apr 14 2009, 22:40:02) [MSC v.1500 32 bit (Intel)]
# From type library '{9E93C96F-CF0D-43F6-8BA8-B807A3370712}'
# On Wed Feb 23 00:05:46 2011
"""iTunes 1.13 Type Library"""
makepy_version = '0.5.00'
python_version = 0x20602f0

import win32com.client.CLSIDToClass, pythoncom, pywintypes
import win32com.client.util
from pywintypes import IID
from win32com.client import Dispatch

# The following 3 lines may need tweaking for the particular server
# Candidates are pythoncom.Missing, .Empty and .ArgNotFound
defaultNamedOptArg=pythoncom.Empty
defaultNamedNotOptArg=pythoncom.Empty
defaultUnnamedArg=pythoncom.Empty

CLSID = IID('{9E93C96F-CF0D-43F6-8BA8-B807A3370712}')
MajorVersion = 1
MinorVersion = 13
LibraryFlags = 8
LCID = 0x0

class _IiTunesEvents:
	"""_IiTunesEvents Interface"""
	CLSID = CLSID_Sink = IID('{5846EB78-317E-4B6F-B0C3-11EE8C8FEEF2}')
	coclass_clsid = IID('{DC0C2640-1415-4644-875C-6F4D769839BA}')
	_public_methods_ = [] # For COM Server support
	_dispid_to_func_ = {
		        8 : "OnQuittingEvent",
		        7 : "OnCOMCallsEnabledEvent",
		        5 : "OnUserInterfaceEnabledEvent",
		        1 : "OnDatabaseChangedEvent",
		        4 : "OnPlayerPlayingTrackChangedEvent",
		        6 : "OnCOMCallsDisabledEvent",
		       10 : "OnSoundVolumeChangedEvent",
		        3 : "OnPlayerStopEvent",
		        9 : "OnAboutToPromptUserToQuitEvent",
		        2 : "OnPlayerPlayEvent",
		}

	def __init__(self, oobj = None):
		if oobj is None:
			self._olecp = None
		else:
			import win32com.server.util
			from win32com.server.policy import EventHandlerPolicy
			cpc=oobj._oleobj_.QueryInterface(pythoncom.IID_IConnectionPointContainer)
			cp=cpc.FindConnectionPoint(self.CLSID_Sink)
			cookie=cp.Advise(win32com.server.util.wrap(self, usePolicy=EventHandlerPolicy))
			self._olecp,self._olecp_cookie = cp,cookie
	def __del__(self):
		try:
			self.close()
		except pythoncom.com_error:
			pass
	def close(self):
		if self._olecp is not None:
			cp,cookie,self._olecp,self._olecp_cookie = self._olecp,self._olecp_cookie,None,None
			cp.Unadvise(cookie)
	def _query_interface_(self, iid):
		import win32com.server.util
		if iid==self.CLSID_Sink: return win32com.server.util.wrap(self)

	# Event Handlers
	# If you create handlers, they should have the following prototypes:
#	def OnQuittingEvent(self):
#		"""Fired when iTunes is about to quit."""
#	def OnCOMCallsEnabledEvent(self):
#		"""Fired when calls to the iTunes COM interface will no longer be deferred."""
#	def OnUserInterfaceEnabledEvent(self):
#		"""Fired when the iTunes user interface is no longer disabled."""
#	def OnDatabaseChangedEvent(self, deletedObjectIDs=defaultNamedNotOptArg, changedObjectIDs=defaultNamedNotOptArg):
#		"""Fired when a database change occurs."""
#	def OnPlayerPlayingTrackChangedEvent(self, iTrack=defaultNamedNotOptArg):
#		"""Fired when information about the currently playing track has changed."""
#	def OnCOMCallsDisabledEvent(self, reason=defaultNamedNotOptArg):
#		"""Fired when calls to the iTunes COM interface will be deferred."""
#	def OnSoundVolumeChangedEvent(self, newVolume=defaultNamedNotOptArg):
#		"""Fired when the sound output volume has changed."""
#	def OnPlayerStopEvent(self, iTrack=defaultNamedNotOptArg):
#		"""Fired when a track has stopped playing."""
#	def OnAboutToPromptUserToQuitEvent(self):
#		"""Fired when iTunes is about to prompt the user to quit."""
#	def OnPlayerPlayEvent(self, iTrack=defaultNamedNotOptArg):
#		"""Fired when a track has started playing."""


win32com.client.CLSIDToClass.RegisterCLSID( "{5846EB78-317E-4B6F-B0C3-11EE8C8FEEF2}", _IiTunesEvents )
